name: Deploy To QA

on:
  workflow_call:

jobs:
  Deploy-to-QA:
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_DEV_GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup Git Authentication
        env:
          COMMIT_AUTHOR: ${{ secrets.CI_COMMIT_AUTHOR }}
          COMMIT_EMAIL: ${{ secrets.CI_COMMIT_EMAIL }}
          MY_PERSONAL_ACCESS_TOKEN: ${{ secrets.CI_DEV_GITHUB_TOKEN }}
        run: |
          git config --global user.name $COMMIT_AUTHOR
          git config --global user.email $COMMIT_EMAIL
          git config --global credential.helper 'cache --timeout=300'
          git config --global --add "credential.https://github.com.username" "x-access-token"
          echo "https://x-access-token:$MY_PERSONAL_ACCESS_TOKEN@github.com" > ~/.git-credentials
          
      - name: Check if fixed version is on Jira
        env:
          JIRA_TOKEN: ${{ secrets.CI_JIRA_TOKEN }}
          BRANCH_NAME: ${{github.ref_name}}
        run: |
          fixed_version_found=false
          plugin_version=$(echo "$BRANCH_NAME" | grep -Eo '[0-9].[0-9]+.[0-9]+')
          jira_fixed_version="Cordova SDK v$plugin_version"
          # echo "PLUGIN_VERSION=$plugin_version" >> $GITHUB_ENV
          echo "JIRA_FIXED_VERSION=$jira_fixed_version" >> $GITHUB_ENV
          chmod +x .github/workflows/scripts/releaseNotesGenerator.sh
          .github/workflows/scripts/releaseNotesGenerator.sh $JIRA_TOKEN "$jira_fixed_version"
      - name: Update package.json file
        run: |
          # Clear unstaged changes
          git restore .
          # Pull changes (e.g. if changes pushed by other workflows, as in Prepare-Plugin-For-Production)
          git pull --rebase origin ${{github.ref_name}}
          
          plugin_rc_version=$(echo "${{github.ref_name}}" | grep -Eo '[0-9].[0-9]+.[0-9]+-rc[0-9]+')
          echo "Updating plugin to version $plugin_rc_version"
          sed -i -r -e "s/\"version\": \"[0-9]+.[0-9]+.[0-9]+(-rc[0-9]+)?\"/\"version\": \"$plugin_rc_version\"/gi" package.json
          echo "Updating plugin.xml to version $plugin_rc_version"
          sed -i -r -e "s/version=\"[0-9].[0-9]+.[0-9]+\"/version=\"$plugin_rc_version\"/gi" plugin.xml
          git add plugin.xml package.json
          git commit -m "update plugin.xml and package.json files"

          # Push the changes
          git push
      - name: Push to NPM
        env:
          CI_NPM_TOKEN: ${{ secrets.CI_NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$CI_NPM_TOKEN" > ~/.npmrc
          npm publish --tag QA
      - name: Generate and send slack report
        env:
          SLACK_TOKEN: ${{ secrets.CI_SLACK_TOKEN }}
        run: |
          ios_sdk_version=$(cat README.md | grep 'iOS AppsFlyerSDK' | grep -Eo  '[0-9].[0-9]+.[0-9]+')
          echo "The ios sdk version is: $ios_sdk_version" 
          android_sdk_version=$(cat README.md | grep 'Android AppsFlyerSDK' | grep -Eo '[0-9].[0-9]+.[0-9]+')
          CHANGES=$(cat "${{env.JIRA_FIXED_VERSION}}-releasenotes".txt)
          curl -X POST -H 'Content-type: application/json' --data '{"jira_fixed_version": "'"${{env.JIRA_FIXED_VERSION}}"'", "deploy_type": "QA", "install_tag": "QA", "git_branch": "'"${{github.ref_name}}"'", "changes_and_fixes": "'"$CHANGES"'", "android_dependency": "'"$android_sdk_version"'", "ios_dependency": "'"$ios_sdk_version"'"}' "$SLACK_TOKEN"
